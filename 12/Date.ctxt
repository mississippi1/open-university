#BlueJ class context
comment0.target=Date
comment0.text=\n\ This\ class\ represents\ a\ Date\ object\n\n\ @author\ TomerPeker\n\ @version\ 1.0.0\n
comment1.params=day\ month\ year
comment1.target=Date(int,\ int,\ int)
comment1.text=If\ the\ given\ date\ is\ valid\ -\ creates\ a\ new\ Date\ object,\ otherwise\ creates\ the\ date\ 1/1/2000\n\ \ \ \ \ \ \ @param\ day\ the\ day\ in\ the\ month\ (1-31)\n\ \ \ \ \ \ \ @param\ month\ the\ month\ in\ the\ year\ (1-12)\n\ \ \ \ \ \ \ @param\ year\ the\ year\ (4\ digits)\n
comment10.params=month
comment10.target=boolean\ isMonthValid(int)
comment10.text=Checks\ if\ a\ given\ month\ is\ valid\n\ \ \ \ \ \ \ @param\ int\ month\n@return\ is\ month\ valid
comment11.params=year
comment11.target=boolean\ isYearValid(int)
comment11.text=Checks\ if\ a\ given\ year\ is\ valid\n\ \ \ \ \ \ \ @param\ int\ year\n@return\ is\ year\ valid
comment12.params=year
comment12.target=boolean\ isLeapYear(int)
comment12.text=Checks\ if\ a\ given\ year\ is\ leap\ year\n\ \ \ \ \ \ \ @param\ year\n@return\ is\ year\ leap\ year
comment13.params=day\ month\ year
comment13.target=boolean\ isDateValid(int,\ int,\ int)
comment13.text=Combines\ checking\ if\ whole\ date\ is\ valid\n\ @param\ day\ day\ to\ check\n\ @param\ month\ month\ to\ check\n\ @param\ year\ year\ to\ check\n\ @return\ is\ date\ valid\n
comment14.params=other
comment14.target=boolean\ equals(Date)
comment14.text=\n\ Check\ if\ 2\ dates\ are\ the\ same\n\n\ @param\ \ other\ the\ date\ to\ compare\ this\ date\ to\n\ @return\ \ true\ if\ the\ dates\ are\ the\ same,\ otherwise\ false\n
comment15.params=other
comment15.target=boolean\ before(Date)
comment15.text=\n\ Check\ if\ this\ date\ is\ before\ other\ date\n\ @param\ \ other\ date\ to\ compare\ this\ date\ to\n\ @return\ true\ if\ this\ date\ is\ before\ other\ date,\ otherwise\ false\n
comment16.params=other
comment16.target=boolean\ after(Date)
comment16.text=\n\ Check\ if\ this\ date\ is\ after\ other\ date\n\ @param\ \ other\ date\ to\ compare\ this\ date\ to\n\ @return\ true\ if\ this\ date\ is\ after\ other\ date,\ otherwise\ false\n
comment17.params=other
comment17.target=int\ difference(Date)
comment17.text=\n\ Calculates\ the\ difference\ between\ two\ dates\n\ @param\ \ other\ the\ date\ to\ calculate\ the\ difference\ between\ \n\ @return\ the\ number\ of\ days\ between\ the\ dates\ (non\ negative\ number)\n
comment18.params=afterDate\ beforeDate
comment18.target=int\ diffDates(Date,\ Date)
comment18.text=\n\ Calculates\ the\ number\ of\ days\ between\ two\ dates,\ assist\ method\ for\ the\ difference\n\ @param\ \ other\ the\ date\ to\ calculate\ the\ difference\ between\ \n\ @return\ the\ number\ of\ days\ between\ the\ dates\ (non\ negative\ number)\n
comment19.params=day\ month\ year
comment19.target=int\ calculateDate(int,\ int,\ int)
comment2.params=other
comment2.target=Date(Date)
comment2.text=Copy\ constructor\n@param\ the\ date\ to\ be\ copied
comment20.params=date
comment20.target=int\ calculateDate(Date)
comment21.params=
comment21.target=java.lang.String\ toString()
comment21.text=\n\ Returns\ a\ string\ that\ represents\ this\ date\n\ @return\ String\ that\ represents\ this\ date\ in\ the\ following\ format\:\ day\ (2\ digits)\ /\ month(2\ digits)\ /\ year\ (4\ digits)\ for\ example\:\ 02/03/1998\n
comment22.params=
comment22.target=Date\ tomorrow()
comment22.text=\n\ Calculates\ the\ date\ of\ tomorrow\n\ @return\ the\ date\ of\ tomorrow\n
comment23.params=args
comment23.target=void\ main(java.lang.String[])
comment3.params=
comment3.target=int\ getDay()
comment3.text=Gets\ the\ day\n@return\ the\ day
comment4.params=
comment4.target=int\ getMonth()
comment4.text=Gets\ the\ month\n@return\ the\ month
comment5.params=
comment5.target=int\ getYear()
comment5.text=Gets\ the\ year\n@return\ the\ year
comment6.params=dayToSet
comment6.target=void\ setDay(int)
comment6.text=Sets\ the\ day,\ only\ if\ date\ remains\ valid\n@param\ day\ the\ day\ value\ to\ be\ set
comment7.params=monthToSet
comment7.target=void\ setMonth(int)
comment7.text=Sets\ the\ month,\ only\ if\ date\ remains\ valid\n@param\ month\ the\ month\ value\ to\ be\ set
comment8.params=yearToSet
comment8.target=void\ setYear(int)
comment8.text=Sets\ the\ year,\ only\ if\ date\ remains\ valid\n@param\ year\ the\ year\ value\ to\ be\ set
comment9.params=day\ month\ year
comment9.target=boolean\ isDayValid(int,\ int,\ int)
comment9.text=Checks\ if\ a\ given\ day\ is\ valid\n\ \ \ \ \ \ \ @param\ day\ the\ day\ value\ to\ be\ checked\n\ \ \ \ \ \ \ @param\ month\ the\ month\ value\ to\ be\ checked\n\ \ \ \ \ \ \ @param\ year\ the\ year\ value\ to\ be\ checked\n\ \ \ \ \ \ \ @return\ is\ day\ valid\n
numComments=24
